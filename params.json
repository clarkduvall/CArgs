{"name":"CArgs","body":"CArgs parses command line arguments given to a C++ program and allows you to\r\neasily check which arguments have been specified. It allows defaults to be set\r\nfor arguments of the form '-x 0' or '--x 0'. It also preserves the order of\r\narguments not beginning with a '-'.\r\n\r\n\r\n\r\n**Example**\r\n\r\nFor example, running the command:\r\n\r\n   test --bob 5 -asd -g 2.4 out\r\n\r\nwould set create an Args object with this mapping:\r\n\r\nbob => 5<br/>\r\na => 0<br/>\r\ns => 0<br/>\r\nd => 0<br/>\r\ng => 2.4<br/>\r\n\r\nThese can be checked and retrieved with the HasOption() and GetInt() or \r\nGetDouble() functions.\r\n\r\n\"out\" would be the first argument in the argument vector, which can be\r\nretrieved with GetArg().\r\n\r\n\r\n**Supported argument forms**\r\n\r\nNotation:<br/>\r\n &lt;n&gt; - a number (3, 4.2, 234242342)<br/>\r\n x - a single character (a, b)<br/>\r\n xxx - multiple characters<br/>\r\n string - a string<br/>\r\n\r\nCArgs will parse any combination of arguments of the forms:\r\n   -x<br/>\r\n   -x &lt;n&gt;<br/>\r\n   -xxx<br/>\r\n   --string<br/>\r\n   --string=&lt;n&gt;<br/>\r\n   --string &lt;n&gt;<br/>\r\n   string<br/>\r\n\r\n\r\n**Makefile**\r\n\r\nThe Makefile will make the cargs library as well as cargs-tests, a test\r\nsuite for CArgs. Look at the Makefile for how to link libcargs.a.","tagline":"C++ command line argument parser.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}